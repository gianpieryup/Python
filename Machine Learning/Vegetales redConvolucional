{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["## Preparacion Datos\n","\n","### Importar dataset\n","\n","Usamos el dataframe de [kagle](https://www.kaggle.com/datasets/apadoss/vegetables-dataset) de verduras"],"metadata":{"id":"Ce3PrSbgSpJ-"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"idibxD68mX5x","executionInfo":{"status":"ok","timestamp":1750564663512,"user_tz":180,"elapsed":15917,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"2c238dc5-a5ca-424c-8d56-eb12d97f0532"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading from https://www.kaggle.com/api/v1/datasets/download/apadoss/vegetables-dataset?dataset_version_number=1...\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 326M/326M [00:04<00:00, 84.9MB/s]"]},{"output_type":"stream","name":"stdout","text":["Extracting files...\n"]},{"output_type":"stream","name":"stderr","text":["\n"]},{"output_type":"stream","name":"stdout","text":["Path to dataset files: /root/.cache/kagglehub/datasets/apadoss/vegetables-dataset/versions/1\n"]}],"source":["import kagglehub\n","\n","# Download latest version\n","path = kagglehub.dataset_download(\"apadoss/vegetables-dataset\")\n","\n","# Recordar \"Mostrar archivos ocultos\"\n","print(\"Path to dataset files:\", path)"]},{"cell_type":"code","source":["%cd /root/.cache/kagglehub/datasets/apadoss/vegetables-dataset/versions/1\n","%ls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4uZH9X64mcRv","executionInfo":{"status":"ok","timestamp":1750564663617,"user_tz":180,"elapsed":101,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"2fbeb515-dd1c-4426-c60d-1bdc33a4ef1e"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["/root/.cache/kagglehub/datasets/apadoss/vegetables-dataset/versions/1\n","\u001b[0m\u001b[01;34mtest\u001b[0m/  \u001b[01;34mtrain\u001b[0m/  \u001b[01;34mvalid\u001b[0m/\n"]}]},{"cell_type":"code","source":["import os\n","import tensorflow as tf\n","from tensorflow import keras\n","from keras.models import Sequential\n","from keras.layers import Conv2D, MaxPooling2D,Flatten, Dense\n","from tensorflow.keras.callbacks import TensorBoard\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator\n","from tensorflow.keras import layers, models"],"metadata":{"id":"gV26304cme9T","executionInfo":{"status":"ok","timestamp":1750564667072,"user_tz":180,"elapsed":3446,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["image_size = (150, 150)\n","batch_size = 32\n","\n","from time import time\n","\n","# DATA SOURCE --------------------------------------------------\n","train_data_dir = 'train'\n","validation_data_dir = 'valid'\n","test_data_dir = 'test'"],"metadata":{"id":"i8bPOvYit5A4","executionInfo":{"status":"ok","timestamp":1750565251479,"user_tz":180,"elapsed":6,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["train_ds = keras.preprocessing.image_dataset_from_directory(\n","    train_data_dir,\n","    #validation_split=0.2,\n","    #subset=\"training\",\n","    #seed=1337,\n","    image_size=image_size,\n","    batch_size=batch_size,\n","    label_mode='categorical'\n",")\n","\n","validation_ds = keras.preprocessing.image_dataset_from_directory(\n","    validation_data_dir,\n","    #validation_split=0.2,\n","    #subset=\"validation\",\n","    #seed=1337,\n","    image_size=image_size,\n","    batch_size=batch_size,\n","    label_mode='categorical'\n",")\n","\n","test_ds = keras.preprocessing.image_dataset_from_directory(\n","    test_data_dir,\n","    #validation_split=0.2,\n","    #subset=\"validation\",\n","    #seed=1337,\n","    image_size=image_size,\n","    batch_size=batch_size,\n","    label_mode='categorical'\n",")\n","\n","# train_ds = train_ds.prefetch(buffer_size=32)\n","# validation_ds = validation_ds.prefetch(buffer_size=32)\n","# test_ds = test_ds.prefetch(buffer_size=32)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EXOi6UNdt4-a","executionInfo":{"status":"ok","timestamp":1750565254900,"user_tz":180,"elapsed":666,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"00bc319a-3660-4286-b687-b97c8210f74e"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 8400 files belonging to 10 classes.\n","Found 2400 files belonging to 10 classes.\n","Found 1200 files belonging to 10 classes.\n"]}]},{"cell_type":"code","source":["train_ds.class_names"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zx0_rAP70gYS","executionInfo":{"status":"ok","timestamp":1750565292592,"user_tz":180,"elapsed":14,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"cd806b5a-d5e3-4cfc-f1d1-c95dfa3a9926"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Bean',\n"," 'Bitter_Gourd',\n"," 'Bottle_Gourd',\n"," 'Brinjal',\n"," 'Broccoli',\n"," 'Cabbage',\n"," 'Capsicum',\n"," 'Carrot',\n"," 'Cauliflower',\n"," 'Cucumber']"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D, Rescaling\n","\n","# MODEL --------------------------------------------------\n","model = Sequential()\n","model.add(Rescaling(scale=(1./127.5),offset=-1, input_shape=(150, 150, 3)))\n","\n","model.add(Conv2D(16, kernel_size=(3, 3), activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","\n","model.add(Conv2D(32, kernel_size=(3, 3), activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","\n","model.add(Conv2D(64, (3, 3), activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Conv2D(128, (3, 3), activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Conv2D(256, (3, 3), activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Flatten())\n","model.add(Dense(64, activation='relu'))\n","model.add(Dropout(0.5))\n","\n","model.add(Dense(10, activation='softmax'))\n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":784},"id":"UNV8R-Jtt48F","executionInfo":{"status":"ok","timestamp":1750565303327,"user_tz":180,"elapsed":193,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"8e09f47b-c073-4ff4-ab85-48ba95543731"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/keras/src/layers/preprocessing/tf_data_layer.py:19: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(**kwargs)\n"]},{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential_1\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_1\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ rescaling_1 (\u001b[38;5;33mRescaling\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m150\u001b[0m, \u001b[38;5;34m3\u001b[0m)    │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_5 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m148\u001b[0m, \u001b[38;5;34m148\u001b[0m, \u001b[38;5;34m16\u001b[0m)   │           \u001b[38;5;34m448\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_5 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m74\u001b[0m, \u001b[38;5;34m74\u001b[0m, \u001b[38;5;34m16\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_6 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m72\u001b[0m, \u001b[38;5;34m72\u001b[0m, \u001b[38;5;34m32\u001b[0m)     │         \u001b[38;5;34m4,640\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_6 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m36\u001b[0m, \u001b[38;5;34m36\u001b[0m, \u001b[38;5;34m32\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_7 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m34\u001b[0m, \u001b[38;5;34m34\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │        \u001b[38;5;34m18,496\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_7 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m17\u001b[0m, \u001b[38;5;34m17\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_4 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m17\u001b[0m, \u001b[38;5;34m17\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_8 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m15\u001b[0m, \u001b[38;5;34m128\u001b[0m)    │        \u001b[38;5;34m73,856\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_8 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m128\u001b[0m)      │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_5 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m7\u001b[0m, \u001b[38;5;34m128\u001b[0m)      │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_9 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m256\u001b[0m)      │       \u001b[38;5;34m295,168\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_9 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m2\u001b[0m, \u001b[38;5;34m2\u001b[0m, \u001b[38;5;34m256\u001b[0m)      │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_6 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m2\u001b[0m, \u001b[38;5;34m2\u001b[0m, \u001b[38;5;34m256\u001b[0m)      │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ flatten_1 (\u001b[38;5;33mFlatten\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1024\u001b[0m)           │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │        \u001b[38;5;34m65,600\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_7 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m)             │           \u001b[38;5;34m650\u001b[0m │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ rescaling_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Rescaling</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">150</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">150</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">3</span>)    │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">148</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">148</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>)   │           <span style=\"color: #00af00; text-decoration-color: #00af00\">448</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">74</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">74</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">72</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">72</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)     │         <span style=\"color: #00af00; text-decoration-color: #00af00\">4,640</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">36</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">36</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">34</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">34</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │        <span style=\"color: #00af00; text-decoration-color: #00af00\">18,496</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">17</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">17</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">17</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">17</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">73,856</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_8 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)      │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_5 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">7</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)      │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ conv2d_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)      │       <span style=\"color: #00af00; text-decoration-color: #00af00\">295,168</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ max_pooling2d_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)      │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_6 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)      │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ flatten_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1024</span>)           │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │        <span style=\"color: #00af00; text-decoration-color: #00af00\">65,600</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_7 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">650</span> │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m458,858\u001b[0m (1.75 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">458,858</span> (1.75 MB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m458,858\u001b[0m (1.75 MB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">458,858</span> (1.75 MB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}}]},{"cell_type":"code","source":["model.compile(loss=keras.losses.categorical_crossentropy,\n","              optimizer=keras.optimizers.Adam(1e-3),\n","              metrics=['accuracy'])"],"metadata":{"id":"_BMRCWNqt43E","executionInfo":{"status":"ok","timestamp":1750565306619,"user_tz":180,"elapsed":18,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["# TRAINING --------------------------------------------------\n","from tensorflow.keras.callbacks import EarlyStopping\n","from IPython.display import clear_output\n","\n","clear_output()\n","epochs = 200\n","\n","# EarlyStopping en Keras/TensorFlow para detener el entrenamiento automáticamente cuando el modelo deja de mejorar, especialmente en val_loss\n","es = EarlyStopping(monitor='val_accuracy', mode='max', verbose=1, patience=3, restore_best_weights=True)\n","\n","history = model.fit(\n","          train_ds,\n","          epochs=epochs,\n","          validation_data = validation_ds,\n","          callbacks = [es]\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NE30VVAduvzc","executionInfo":{"status":"ok","timestamp":1750565410664,"user_tz":180,"elapsed":102356,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"e83b5fea-48fd-4e59-ad0c-cf4d559a9907"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/200\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 48ms/step - accuracy: 0.2324 - loss: 1.9913 - val_accuracy: 0.6350 - val_loss: 1.0854\n","Epoch 2/200\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 34ms/step - accuracy: 0.5844 - loss: 1.1462 - val_accuracy: 0.7871 - val_loss: 0.6809\n","Epoch 3/200\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 34ms/step - accuracy: 0.7465 - loss: 0.7488 - val_accuracy: 0.8646 - val_loss: 0.4263\n","Epoch 4/200\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 36ms/step - accuracy: 0.8174 - loss: 0.5494 - val_accuracy: 0.8967 - val_loss: 0.3365\n","Epoch 5/200\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 26ms/step - accuracy: 0.8628 - loss: 0.4474 - val_accuracy: 0.9196 - val_loss: 0.2511\n","Epoch 6/200\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 34ms/step - accuracy: 0.8881 - loss: 0.3654 - val_accuracy: 0.9300 - val_loss: 0.2241\n","Epoch 7/200\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 30ms/step - accuracy: 0.9114 - loss: 0.2886 - val_accuracy: 0.9617 - val_loss: 0.1200\n","Epoch 8/200\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 25ms/step - accuracy: 0.9389 - loss: 0.2086 - val_accuracy: 0.9463 - val_loss: 0.1653\n","Epoch 9/200\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 35ms/step - accuracy: 0.9422 - loss: 0.1865 - val_accuracy: 0.9579 - val_loss: 0.1435\n","Epoch 10/200\n","\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 30ms/step - accuracy: 0.9605 - loss: 0.1485 - val_accuracy: 0.9596 - val_loss: 0.1423\n","Epoch 10: early stopping\n","Restoring model weights from the end of the best epoch: 7.\n"]}]},{"cell_type":"markdown","source":["## Metricas\n","\n","### Validacion\n","\n","Usando el `validation_ds` : el que se uso en la validacion del entrenamiento"],"metadata":{"id":"VR_XOmiKw-pC"}},{"cell_type":"code","source":["import numpy as np\n","from sklearn.metrics import classification_report, confusion_matrix, ConfusionMatrixDisplay\n","import seaborn as sns\n","\n","\n","results = np.concatenate([(y, model.predict(x=x)) for x, y in validation_ds], axis=1)\n","\n","labels = np.argmax(results[0], axis=1)\n","predictions = np.argmax(results[1], axis=1)\n","\n","cf_matrix = confusion_matrix(labels, predictions)\n","\n","sns.heatmap(cf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\")\n","\n","#disp = ConfusionMatrixDisplay(confusion_matrix=cf_matrix)\n","#disp.plot()\n","\n","print(classification_report(labels, predictions, digits = 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"f1bwVLQLwKZU","executionInfo":{"status":"ok","timestamp":1750565436493,"user_tz":180,"elapsed":21139,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"8debb49c-b9d6-478a-c5a0-511a493963ee"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 344ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 38ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 38ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 37ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 39ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 62ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 105ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 119ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 55ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 64ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 104ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 61ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 69ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 56ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 67ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 89ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 89ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 98ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 126ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 247ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 191ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 60ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 53ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 54ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 37ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 38ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 39ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 37ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 41ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 37ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 70ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 33ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 33ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 43ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 38ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 37ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 40ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 37ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","              precision    recall  f1-score   support\n","\n","           0     0.9739    0.9333    0.9532       240\n","           1     0.9365    0.9833    0.9593       240\n","           2     0.9676    0.9958    0.9815       240\n","           3     0.9778    0.9167    0.9462       240\n","           4     0.9872    0.9625    0.9747       240\n","           5     0.9031    0.9708    0.9357       240\n","           6     0.9835    0.9958    0.9896       240\n","           7     1.0000    0.9917    0.9958       240\n","           8     1.0000    0.8875    0.9404       240\n","           9     0.9038    0.9792    0.9400       240\n","\n","    accuracy                         0.9617      2400\n","   macro avg     0.9633    0.9617    0.9617      2400\n","weighted avg     0.9633    0.9617    0.9617      2400\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["from matplotlib import pyplot as plt\n","\n","plt.plot(history.history['accuracy'], label='accuracy')\n","plt.plot(history.history['val_accuracy'], label='validation accuracy')\n","plt.plot(history.history['loss'], label='loss')\n","\n","\n","plt.title('Entrenamiento vegetable-images')\n","plt.xlabel('Épocas')\n","plt.ylabel('Exactitud')\n","plt.legend(loc=\"upper right\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":474},"id":"sQ0-IOwAwKWm","executionInfo":{"status":"ok","timestamp":1750565436653,"user_tz":180,"elapsed":162,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"ec28b0c3-5432-4646-e947-87a35263cbc6"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Test\n","\n","Usando el `test_ds` : el dataset que NO se uso en el entrenamiento."],"metadata":{"id":"Fp2DlUZ6xRQl"}},{"cell_type":"code","source":["# AHORA CON LA DE TEST\n","results = np.concatenate([(y, model.predict(x=x)) for x, y in test_ds], axis=1)\n","\n","labels = np.argmax(results[0], axis=1)\n","predictions = np.argmax(results[1], axis=1)\n","\n","cf_matrix = confusion_matrix(labels, predictions)\n","\n","sns.heatmap(cf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\")\n","\n","#disp = ConfusionMatrixDisplay(confusion_matrix=cf_matrix)\n","#disp.plot()\n","\n","print(classification_report(labels, predictions, digits = 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"hlYGShyHuvt_","executionInfo":{"status":"ok","timestamp":1750565442125,"user_tz":180,"elapsed":5469,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"5ebf7fbf-9675-4a72-8367-b9c7401e0809"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 33ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 33ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 33ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 33ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 32ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 32ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 43ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 38ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 37ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 36ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 38ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 35ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 348ms/step\n","              precision    recall  f1-score   support\n","\n","           0     0.9580    0.9500    0.9540       120\n","           1     0.9444    0.9917    0.9675       120\n","           2     0.9836    1.0000    0.9917       120\n","           3     0.9558    0.9000    0.9270       120\n","           4     0.9748    0.9667    0.9707       120\n","           5     0.9280    0.9667    0.9469       120\n","           6     1.0000    0.9833    0.9916       120\n","           7     1.0000    1.0000    1.0000       120\n","           8     1.0000    0.9250    0.9610       120\n","           9     0.9134    0.9667    0.9393       120\n","\n","    accuracy                         0.9650      1200\n","   macro avg     0.9658    0.9650    0.9650      1200\n","weighted avg     0.9658    0.9650    0.9650      1200\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# prompt: como validar una imagen del test_ds\n","\n","# Get one batch from the test dataset\n","test_images, test_labels = next(iter(test_ds))\n","\n","# Select the first image and its label from the batch\n","single_image = test_images[0]\n","single_label = test_labels[0]\n","\n","# Expand the dimensions of the image to match the input shape of the model (add batch dimension)\n","single_image_expanded = np.expand_dims(single_image, axis=0)\n","\n","# Get the class names from the test dataset\n","class_names = test_ds.class_names\n","\n","# Make a prediction on the single image\n","prediction = model.predict(single_image_expanded)\n","\n","\n","# Get the predicted class index\n","predicted_class_index = np.argmax(prediction)\n","confidence_score = prediction[0][predicted_class_index]\n","\n","# Get the actual class index\n","actual_class_index = np.argmax(single_label)\n","\n","# Get the predicted class name\n","predicted_class_name = class_names[predicted_class_index]\n","\n","# Get the actual class name\n","actual_class_name = class_names[actual_class_index]\n","\n","#print(f\"Predicted class: {predicted_class_name}\")\n","print(f\"Puntuacion: {confidence_score}\")\n","print(f\"Predicted class: {predicted_class_name}\")\n","print(f\"Actual class: {actual_class_name}\")\n","\n","# You can optionally display the image\n","plt.imshow((single_image.numpy() * 0.5 + 0.5).astype(\"uint8\")) # Adjust for rescaling layer\n","#plt.title(f\"Predicted: {predicted_class_name} | Actual: {actual_class_name}\")\n","plt.axis(\"off\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":475},"id":"n6gay4BHx32D","executionInfo":{"status":"ok","timestamp":1750566028522,"user_tz":180,"elapsed":268,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"eba901b5-eb5d-4b81-d788-88169da8f349"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 30ms/step\n","Puntuacion: 0.9997434020042419\n","Predicted class: Carrot\n","Actual class: Carrot\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["<hr>\n","<hr>"],"metadata":{"id":"L1-4j41o3VUX"}},{"cell_type":"markdown","source":["##Validacion de imágenes"],"metadata":{"id":"56qdaFpF8kuJ"}},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow import keras\n","from keras.utils import img_to_array, load_img\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import os\n","\n","# Levantar el modelo a partir del nombre de la carpeta o archivo\n","modelo = keras.models.load_model('gianxxx.keras')\n","\n","val_datagen = ImageDataGenerator(rescale=1./255)\n","val_dataset = val_datagen.flow_from_directory('/root/.cache/kagglehub/datasets/apadoss/vegetables-dataset/versions/1/valid',\n","                                                target_size=(150, 150),\n","                                                batch_size=32,\n","                                                class_mode='categorical')\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2nSGvUIY8iea","executionInfo":{"status":"ok","timestamp":1750200464614,"user_tz":180,"elapsed":266,"user":{"displayName":"Agustin Evans","userId":"16105838402157026960"}},"outputId":"12bd74e0-e5ff-4e46-8d21-11c9b9be5a6a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 2400 images belonging to 10 classes.\n"]}]},{"cell_type":"code","source":["def predict(file):\n","  img = load_img(file, target_size=(150,150)) # Las mismas dimensiones con la que fue entrenada la red\n","  img_array = img_to_array(img)\n","  img_array = np.expand_dims(img_array, axis=0)\n","\n","  predictions = modelo.predict(img_array)\n","  score = tf.nn.softmax(predictions[0])\n","  index_pre = np.argmax(score)\n","\n","  #print('Puntuacion:',100 * np.max(score))\n","  #print('Etiqueta Predicha:', class_names[index_pre]  )\n","  return index_pre"],"metadata":{"id":"2UbP0C6mAaqv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x, y = next(iter(test_ds))\n","\n","image = x[0, :, :, :]\n","true_index = np.argmax(y[0])\n","plt.imshow(image)\n","plt.axis('off')\n","plt.show()\n","\n","prediction_scores = model.predict(np.expand_dims(image, axis=0))\n","predicted_index = np.argmax(prediction_scores)\n","score = np.max(prediction_scores)\n","print(f\"Puntuacion: {score}\")\n","print(\"Etiqueta Verdadera: \" + class_names[true_index])\n","print(\"Etiqueta Predicha: \" + class_names[predicted_index])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":634},"id":"xO4jYA6-AQ3P","executionInfo":{"status":"error","timestamp":1750564941704,"user_tz":180,"elapsed":3121,"user":{"displayName":"gianpier yupanqui","userId":"00301935202409049348"}},"outputId":"60e00ffa-808e-4271-abd3-eb5be6a38031"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [0.0..248.65044].\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1s/step\n","Puntuacion: 0.9998743534088135\n"]},{"output_type":"error","ename":"NameError","evalue":"name 'class_names' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-14-1489063908.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0mscore\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprediction_scores\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Puntuacion: {score}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Etiqueta Verdadera: \"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mclass_names\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtrue_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Etiqueta Predicha: \"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mclass_names\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpredicted_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'class_names' is not defined"]}]},{"cell_type":"markdown","source":["#Otro *DATASET*"],"metadata":{"id":"CT6vnr7D8DGz"}},{"cell_type":"code","source":["import kagglehub\n","\n","# Download doublecheck set\n","path = kagglehub.dataset_download(\"victoriaruizschulze/doublecheck\")\n","\n","# Recordar \"Mostrar archivos ocultos\"\n","print(\"Path to dataset files:\", path)\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"10oj3dmXZwtN","executionInfo":{"status":"ok","timestamp":1749849699449,"user_tz":180,"elapsed":18552,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"3894e1ef-7da6-4ee1-f2ff-bb9a3998456d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading from https://www.kaggle.com/api/v1/datasets/download/victoriaruizschulze/doublecheck?dataset_version_number=3...\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 658M/658M [00:08<00:00, 82.9MB/s]"]},{"output_type":"stream","name":"stdout","text":["Extracting files...\n"]},{"output_type":"stream","name":"stderr","text":["\n"]},{"output_type":"stream","name":"stdout","text":["Path to dataset files: /root/.cache/kagglehub/datasets/victoriaruizschulze/doublecheck/versions/3\n"]}]},{"cell_type":"markdown","source":["Este dataset es de calidad dudosa:\n","\n","\n","1.   Bean mezcla estilos de chaucha. VI + FV\n","2.   Bitter Gourd: copia del anterior\n","3.   Bottle Gourd: copia\n","4.   Brinjal: berenjena verde. VI\n","5.   Broccoli: original\n","6.   Cabbage: FV\n","7.   Capsicum: FV\n","8.   Carrot: FV\n","9.   Cauliflower: FV?\n"],"metadata":{"id":"v88dTIqO-WJf"}},{"cell_type":"code","source":["%cd /root/.cache/kagglehub/datasets/victoriaruizschulze/doublecheck/versions/3/\n","%ls\n","\n","doublecheck_ds = keras.preprocessing.image_dataset_from_directory(\n","    'dataset_validacion_doble',\n","    image_size=image_size,\n","    batch_size=batch_size,\n","    label_mode='categorical'\n",")\n","\n","doublecheck_ds = doublecheck_ds.prefetch(buffer_size = 32)\n","\n","\n","# AHORA CON LA DE doublecheck\n","results = np.concatenate([(y, model.predict(x=x)) for x, y in doublecheck_ds], axis=1)\n","\n","labels = np.argmax(results[0], axis=1)\n","predictions = np.argmax(results[1], axis=1)\n","\n","cf_matrix = confusion_matrix(labels, predictions)\n","\n","sns.heatmap(cf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\")\n","\n","#disp = ConfusionMatrixDisplay(confusion_matrix=cf_matrix)\n","#disp.plot()\n","\n","print(classification_report(labels, predictions, digits = 4))"],"metadata":{"id":"GAO9lYqDt40m","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1749849741227,"user_tz":180,"elapsed":41773,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"4c251c22-e24c-4a91-ad19-f996e4f2b744"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/root/.cache/kagglehub/datasets/victoriaruizschulze/doublecheck/versions/3\n","\u001b[0m\u001b[01;34mdataset_validacion_doble\u001b[0m/\n","Found 2043 files belonging to 10 classes.\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 104ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 119ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 60ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 99ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 93ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 66ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 61ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 103ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 101ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 99ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 81ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 106ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 95ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 51ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 115ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 122ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 97ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 105ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 121ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 97ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 93ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 95ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 68ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 95ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 99ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 93ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 61ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 102ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 85ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 99ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 68ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 115ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 97ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 143ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 126ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 110ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 110ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 112ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 78ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 96ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 71ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 67ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 47ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 95ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 103ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 110ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 49ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 95ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 773ms/step\n","              precision    recall  f1-score   support\n","\n","           0     0.1145    0.0661    0.0838       514\n","           1     0.4894    0.9583    0.6479       240\n","           2     0.7677    0.9917    0.8655       240\n","           3     0.6349    0.1072    0.1835       373\n","           4     0.4122    0.9583    0.5764       240\n","           5     0.5156    0.3587    0.4231        92\n","           6     0.5714    0.8539    0.6847        89\n","           7     0.9565    0.8049    0.8742        82\n","           8     0.8267    0.7848    0.8052        79\n","           9     0.5000    0.0213    0.0408        94\n","\n","    accuracy                         0.4949      2043\n","   macro avg     0.5789    0.5905    0.5185      2043\n","weighted avg     0.4823    0.4949    0.4171      2043\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["IA PPT"],"metadata":{"id":"_dj5EelD8Pz_"}},{"cell_type":"markdown","metadata":{"id":"10adeff3"},"source":["# Task\n","Generate a 10-minute academic presentation script based on the provided Python code for image classification of vegetables. The script should include an introduction, data description, preprocessing steps, model architecture explanation, training process, results evaluation (including metrics and confusion matrices), and a discussion/conclusion. Incorporate explanations of specific code adjustments made during the process. The tone should be suitable for an academic oral presentation."]},{"cell_type":"markdown","metadata":{"id":"6bc27fd8"},"source":["## Introducción (1 min)\n","\n","### Subtask:\n","Presentar el tema del proyecto (clasificación de imágenes de vegetales) y su relevancia. Mencionar el objetivo de construir un modelo de aprendizaje profundo para esta tarea.\n"]},{"cell_type":"markdown","metadata":{"id":"fcb6df00"},"source":["**Reasoning**:\n","Draft the opening statement, explain the relevance, and state the project objective in a markdown cell.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"dc2aab7a"},"source":["# Task\n","Genera un guión en español para una presentación académica de 10 minutos sobre un proyecto de clasificación de imágenes de vegetales utilizando aprendizaje profundo. El guión debe incluir una introducción, descripción de la fuente de datos, preprocesamiento, arquitectura del modelo (mencionando la capa de Rescaling como ajuste), entrenamiento (mencionando EarlyStopping y restauración de pesos como ajustes), evaluación de resultados (incluyendo métricas y matrices de confusión), y discusión/conclusiones. El tono debe ser académico."]},{"cell_type":"markdown","metadata":{"id":"7705b20c"},"source":["## Introducción (1 min)\n","\n","### Subtask:\n","Presentar el tema del proyecto (clasificación de imágenes de vegetales) y su relevancia. Mencionar el objetivo de construir un modelo de aprendizaje profundo para esta tarea.\n"]},{"cell_type":"markdown","metadata":{"id":"e2f32de6"},"source":["**Reasoning**:\n","Draft the introductory section of the presentation script in Spanish, covering the topic, relevance, and project objective as requested in the subtask instructions.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"342590d6","executionInfo":{"status":"ok","timestamp":1749849741247,"user_tz":180,"elapsed":18,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"2e3b6ba8-c622-4388-b7a6-72bc93ad435f"},"source":["introduction = \"\"\"\n","Buenos días a todos. Hoy les presentaré nuestro proyecto de clasificación de imágenes de vegetales utilizando técnicas de aprendizaje profundo. La identificación y clasificación automática de vegetales a partir de imágenes tiene una relevancia creciente en diversas áreas, como la agricultura de precisión para el monitoreo de cultivos, el control de calidad en la industria alimentaria y el desarrollo de herramientas educativas interactivas.\n","\n","El objetivo principal de este trabajo es diseñar, implementar y evaluar un modelo de red neuronal convolucional capaz de clasificar con alta precisión imágenes de diferentes tipos de vegetales. Buscamos demostrar la efectividad del aprendizaje profundo para abordar este desafío visual.\n","\"\"\"\n","print(introduction)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Buenos días a todos. Hoy les presentaré nuestro proyecto de clasificación de imágenes de vegetales utilizando técnicas de aprendizaje profundo. La identificación y clasificación automática de vegetales a partir de imágenes tiene una relevancia creciente en diversas áreas, como la agricultura de precisión para el monitoreo de cultivos, el control de calidad en la industria alimentaria y el desarrollo de herramientas educativas interactivas.\n","\n","El objetivo principal de este trabajo es diseñar, implementar y evaluar un modelo de red neuronal convolucional capaz de clasificar con alta precisión imágenes de diferentes tipos de vegetales. Buscamos demostrar la efectividad del aprendizaje profundo para abordar este desafío visual.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"afcbe328"},"source":["## Fuente de datos (1 min)\n","\n","### Subtask:\n","Describir el origen de los datos (dataset de Kaggle) y cómo se cargaron en el entorno. Mencionar la estructura del dataset (train, valid, test).\n"]},{"cell_type":"markdown","metadata":{"id":"69c968b6"},"source":["**Reasoning**:\n","Describe the data source, download method, and directory structure in Spanish as a paragraph in a markdown cell.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"25877c0d","executionInfo":{"status":"ok","timestamp":1749849741261,"user_tz":180,"elapsed":4,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"e0704a32-d01f-49d8-de02-cc47a8650eeb"},"source":["data_description = \"\"\"\n","La fuente principal de datos para este proyecto es el dataset \"vegetables-dataset\" disponible en Kaggle, proporcionado por apadoss. Para acceder a él en nuestro entorno de trabajo, utilizamos la API de Kaggle a través de la librería `kagglehub`, específicamente la función `kagglehub.dataset_download(\"apadoss/vegetables-dataset\")`. Esta función se encarga de descargar el dataset a una ubicación local.\n","\n","Una vez descargado, el dataset presenta una estructura de directorios organizada, lo cual es estándar para problemas de clasificación de imágenes. Contiene tres carpetas principales: `train`, `valid`, y `test`. Cada una de estas carpetas, a su vez, contiene subcarpetas, donde cada subcarpeta corresponde a una clase de vegetal diferente (por ejemplo, 'Bean', 'Broccoli', 'Carrot', etc.), y almacena las imágenes pertenecientes a esa clase para los conjuntos de entrenamiento, validación y prueba, respectivamente. Esta organización facilita la carga de los datos para el entrenamiento y evaluación del modelo utilizando herramientas como `image_dataset_from_directory` de TensorFlow/Keras.\n","\"\"\"\n","print(data_description)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","La fuente principal de datos para este proyecto es el dataset \"vegetables-dataset\" disponible en Kaggle, proporcionado por apadoss. Para acceder a él en nuestro entorno de trabajo, utilizamos la API de Kaggle a través de la librería `kagglehub`, específicamente la función `kagglehub.dataset_download(\"apadoss/vegetables-dataset\")`. Esta función se encarga de descargar el dataset a una ubicación local.\n","\n","Una vez descargado, el dataset presenta una estructura de directorios organizada, lo cual es estándar para problemas de clasificación de imágenes. Contiene tres carpetas principales: `train`, `valid`, y `test`. Cada una de estas carpetas, a su vez, contiene subcarpetas, donde cada subcarpeta corresponde a una clase de vegetal diferente (por ejemplo, 'Bean', 'Broccoli', 'Carrot', etc.), y almacena las imágenes pertenecientes a esa clase para los conjuntos de entrenamiento, validación y prueba, respectivamente. Esta organización facilita la carga de los datos para el entrenamiento y evaluación del modelo utilizando herramientas como `image_dataset_from_directory` de TensorFlow/Keras.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"94c930c2"},"source":["## Preprocesamiento de datos (1.5 min)\n","\n","### Subtask:\n","Explicar cómo se prepararon las imágenes para el modelo (tamaño, normalización, batching). Mencionar el uso de `image_dataset_from_directory`.\n"]},{"cell_type":"markdown","metadata":{"id":"c6156b78"},"source":["**Reasoning**:\n","Define and print the Spanish string explaining the data preprocessing steps based on the provided instructions, including the use of `image_dataset_from_directory` and its parameters.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"91324b7e","executionInfo":{"status":"ok","timestamp":1749849741275,"user_tz":180,"elapsed":13,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"ffa7656a-5790-4952-d029-a7b8ef1f3b7a"},"source":["preprocessing_explanation = \"\"\"\n","Para preparar las imágenes para el entrenamiento de nuestro modelo, realizamos varios pasos de preprocesamiento. La carga de los datos se realizó de manera eficiente utilizando la función `keras.preprocessing.image_dataset_from_directory`. Esta función nos permitió cargar las imágenes directamente desde la estructura de directorios de los conjuntos de entrenamiento, validación y prueba (`train_data_dir`, `validation_data_dir`, `test_data_dir`).\n","\n","Configuramos la función con parámetros clave: `image_size=(150, 150)` para asegurar que todas las imágenes se redimensionaran a una dimensión consistente de 150x150 píxeles, lo cual es crucial para la entrada de la red convolucional; `batch_size=32` para agrupar las imágenes en lotes de 32, optimizando así el proceso de entrenamiento; y `label_mode='categorical'` para codificar las etiquetas de clase como vectores one-hot, que es el formato esperado por la capa de salida softmax de nuestro modelo para una clasificación multi-clase.\n","\n","Adicionalmente, utilizamos `.prefetch(buffer_size=32)` en los datasets cargados. Este paso optimiza la pipeline de carga de datos, permitiendo que el preprocesamiento y la carga de un lote de imágenes se realicen en paralelo con el entrenamiento del lote actual, lo que mejora significativamente el rendimiento general del entrenamiento.\n","\"\"\"\n","print(preprocessing_explanation)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Para preparar las imágenes para el entrenamiento de nuestro modelo, realizamos varios pasos de preprocesamiento. La carga de los datos se realizó de manera eficiente utilizando la función `keras.preprocessing.image_dataset_from_directory`. Esta función nos permitió cargar las imágenes directamente desde la estructura de directorios de los conjuntos de entrenamiento, validación y prueba (`train_data_dir`, `validation_data_dir`, `test_data_dir`).\n","\n","Configuramos la función con parámetros clave: `image_size=(150, 150)` para asegurar que todas las imágenes se redimensionaran a una dimensión consistente de 150x150 píxeles, lo cual es crucial para la entrada de la red convolucional; `batch_size=32` para agrupar las imágenes en lotes de 32, optimizando así el proceso de entrenamiento; y `label_mode='categorical'` para codificar las etiquetas de clase como vectores one-hot, que es el formato esperado por la capa de salida softmax de nuestro modelo para una clasificación multi-clase.\n","\n","Adicionalmente, utilizamos `.prefetch(buffer_size=32)` en los datasets cargados. Este paso optimiza la pipeline de carga de datos, permitiendo que el preprocesamiento y la carga de un lote de imágenes se realicen en paralelo con el entrenamiento del lote actual, lo que mejora significativamente el rendimiento general del entrenamiento.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"da9adefc"},"source":["## Arquitectura del modelo (2.5 min)\n","\n","### Subtask:\n","Presentar la arquitectura del modelo de red neuronal convolucional (CNN) utilizado. Describir las diferentes capas (Conv2D, MaxPooling2D, Dropout, Flatten, Dense) y su propósito. Mencionar la capa de `Rescaling` como un ajuste inicial.\n"]},{"cell_type":"markdown","metadata":{"id":"16e57c8c"},"source":["**Reasoning**:\n","Define and print the explanation of the model architecture, including the Rescaling layer and the purpose of each layer type.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"38c7c21f","executionInfo":{"status":"ok","timestamp":1749849741292,"user_tz":180,"elapsed":15,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"5914ef29-13fe-4bbe-cc4e-adfbdce9c058"},"source":["model_architecture_explanation = \"\"\"\n","Pasando a la arquitectura de nuestro modelo, empleamos una Red Neuronal Convolucional, o CNN, que es un tipo de red particularmente efectiva para el procesamiento de imágenes. Nuestro modelo es de tipo secuencial y está construido apilando diversas capas.\n","\n","Como un ajuste inicial importante, la primera capa que añadimos es una capa `Rescaling`. Esta capa se utiliza para normalizar los valores de píxel de las imágenes de entrada. En nuestro caso, escalamos los valores de píxel del rango original de 0-255 al rango de -1 a 1 utilizando la fórmula `scale=(1./127.5)` y `offset=-1`. Esta normalización es fundamental para ayudar al modelo a aprender de manera más efectiva.\n","\n","Después de la capa de normalización, la arquitectura principal de la CNN se compone de:\n","\n","-   **Capas Conv2D:** Estas son las capas convolucionales principales que aplican filtros a la imagen de entrada para detectar patrones y características, como bordes, texturas y formas. Utilizamos múltiples capas `Conv2D` con un número creciente de filtros (16, 32, 64, 128, 256) para aprender representaciones jerárquicas de las imágenes. La función de activación `relu` se aplica después de cada capa convolucional para introducir no linealidad.\n","-   **Capas MaxPooling2D:** Estas capas se intercalan con las capas convolucionales y realizan una operación de \"pooling\" para reducir la dimensionalidad espacial de las representaciones extraídas por las capas `Conv2D`. Esto ayuda a reducir la cantidad de parámetros y a hacer que el modelo sea más robusto a pequeñas variaciones en la posición de las características.\n","-   **Capas Dropout:** Para combatir el sobreajuste, incorporamos capas `Dropout`. Durante el entrenamiento, estas capas apagan aleatoriamente un porcentaje de neuronas de la capa anterior, forzando a la red a aprender características redundantes y distribuidas. Aplicamos Dropout con tasas del 25% y 50% en diferentes etapas del modelo.\n","-   **Capa Flatten:** Después de las últimas capas convolucionales y de pooling, la capa `Flatten` toma la salida tridimensional de estas capas y la convierte en un vector unidimensional. Esto es necesario para poder conectar las capas convolucionales con las capas densas finales.\n","-   **Capas Dense:** Finalmente, tenemos capas totalmente conectadas, o `Dense`. La primera capa densa tiene 64 neuronas con activación `relu` para aprender combinaciones complejas de las características aplanadas. La capa de salida final es también una capa `Dense` con 10 neuronas, una por cada clase de vegetal. La función de activación `softmax` en esta capa final produce una distribución de probabilidad sobre las 10 clases, indicando la confianza del modelo en que la imagen pertenezca a cada clase.\n","\n","Esta combinación de capas nos permite construir un modelo capaz de aprender representaciones jerárquicas de las imágenes de vegetales y clasificarlas de manera efectiva.\n","\"\"\"\n","print(model_architecture_explanation)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Pasando a la arquitectura de nuestro modelo, empleamos una Red Neuronal Convolucional, o CNN, que es un tipo de red particularmente efectiva para el procesamiento de imágenes. Nuestro modelo es de tipo secuencial y está construido apilando diversas capas.\n","\n","Como un ajuste inicial importante, la primera capa que añadimos es una capa `Rescaling`. Esta capa se utiliza para normalizar los valores de píxel de las imágenes de entrada. En nuestro caso, escalamos los valores de píxel del rango original de 0-255 al rango de -1 a 1 utilizando la fórmula `scale=(1./127.5)` y `offset=-1`. Esta normalización es fundamental para ayudar al modelo a aprender de manera más efectiva.\n","\n","Después de la capa de normalización, la arquitectura principal de la CNN se compone de:\n","\n","-   **Capas Conv2D:** Estas son las capas convolucionales principales que aplican filtros a la imagen de entrada para detectar patrones y características, como bordes, texturas y formas. Utilizamos múltiples capas `Conv2D` con un número creciente de filtros (16, 32, 64, 128, 256) para aprender representaciones jerárquicas de las imágenes. La función de activación `relu` se aplica después de cada capa convolucional para introducir no linealidad.\n","-   **Capas MaxPooling2D:** Estas capas se intercalan con las capas convolucionales y realizan una operación de \"pooling\" para reducir la dimensionalidad espacial de las representaciones extraídas por las capas `Conv2D`. Esto ayuda a reducir la cantidad de parámetros y a hacer que el modelo sea más robusto a pequeñas variaciones en la posición de las características.\n","-   **Capas Dropout:** Para combatir el sobreajuste, incorporamos capas `Dropout`. Durante el entrenamiento, estas capas apagan aleatoriamente un porcentaje de neuronas de la capa anterior, forzando a la red a aprender características redundantes y distribuidas. Aplicamos Dropout con tasas del 25% y 50% en diferentes etapas del modelo.\n","-   **Capa Flatten:** Después de las últimas capas convolucionales y de pooling, la capa `Flatten` toma la salida tridimensional de estas capas y la convierte en un vector unidimensional. Esto es necesario para poder conectar las capas convolucionales con las capas densas finales.\n","-   **Capas Dense:** Finalmente, tenemos capas totalmente conectadas, o `Dense`. La primera capa densa tiene 64 neuronas con activación `relu` para aprender combinaciones complejas de las características aplanadas. La capa de salida final es también una capa `Dense` con 10 neuronas, una por cada clase de vegetal. La función de activación `softmax` en esta capa final produce una distribución de probabilidad sobre las 10 clases, indicando la confianza del modelo en que la imagen pertenezca a cada clase.\n","\n","Esta combinación de capas nos permite construir un modelo capaz de aprender representaciones jerárquicas de las imágenes de vegetales y clasificarlas de manera efectiva.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"bebf7f24"},"source":["## Entrenamiento del modelo (1.5 min)\n","\n","### Subtask:\n","Explicar el proceso de entrenamiento, incluyendo la función de pérdida, el optimizador y las métricas utilizadas. Mencionar el uso de `EarlyStopping` como un ajuste importante para evitar el sobreajuste y cómo se restauraron los mejores pesos.\n"]},{"cell_type":"markdown","metadata":{"id":"e2d4cfb4"},"source":["**Reasoning**:\n","Define and print the explanation for the training process, including the loss function, optimizer, metrics, and the use of EarlyStopping.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0e8d4291","executionInfo":{"status":"ok","timestamp":1749849741309,"user_tz":180,"elapsed":14,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"edc7d706-99fe-46ee-9eac-dc655ac3107d"},"source":["training_explanation = \"\"\"\n","Para entrenar nuestro modelo, configuramos el proceso de aprendizaje con los siguientes componentes:\n","\n","Como función de pérdida, utilizamos `categorical_crossentropy`. Esta es una elección estándar para problemas de clasificación multi-clase donde las etiquetas están en formato one-hot, ya que mide la diferencia entre la distribución de probabilidad predicha por el modelo y la distribución real de las etiquetas.\n","\n","El optimizador seleccionado fue Adam, con una tasa de aprendizaje inicial de 1e-3. Adam es un optimizador popular y efectivo que adapta la tasa de aprendizaje para cada parámetro, lo que a menudo lleva a una convergencia más rápida.\n","\n","Para evaluar el rendimiento del modelo durante el entrenamiento y la validación, utilizamos la métrica de `accuracy`, que mide la proporción de imágenes clasificadas correctamente.\n","\n","Un ajuste crucial que implementamos para evitar el sobreajuste, un problema común en el entrenamiento de redes neuronales, fue el uso del callback `EarlyStopping`. Este callback monitorea una métrica específica durante el entrenamiento, en nuestro caso, la `val_accuracy`, es decir, la exactitud en el conjunto de validación. La capacitación se detiene automáticamente si la métrica monitoreada deja de mejorar después de un cierto número de épocas, definido por el parámetro `patience`. Configuramos `patience=3`, lo que significa que si la `val_accuracy` no mejoraba durante 3 épocas consecutivas, el entrenamiento se detenía. Además, con `restore_best_weights=True`, nos aseguramos de que al finalizar el entrenamiento anticipado, el modelo cargara los pesos que habían resultado en el mejor rendimiento en el conjunto de validación, en lugar de los pesos de la última época. Este mecanismo es fundamental para obtener un modelo que generalice bien a datos no vistos.\n","\"\"\"\n","print(training_explanation)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Para entrenar nuestro modelo, configuramos el proceso de aprendizaje con los siguientes componentes:\n","\n","Como función de pérdida, utilizamos `categorical_crossentropy`. Esta es una elección estándar para problemas de clasificación multi-clase donde las etiquetas están en formato one-hot, ya que mide la diferencia entre la distribución de probabilidad predicha por el modelo y la distribución real de las etiquetas.\n","\n","El optimizador seleccionado fue Adam, con una tasa de aprendizaje inicial de 1e-3. Adam es un optimizador popular y efectivo que adapta la tasa de aprendizaje para cada parámetro, lo que a menudo lleva a una convergencia más rápida.\n","\n","Para evaluar el rendimiento del modelo durante el entrenamiento y la validación, utilizamos la métrica de `accuracy`, que mide la proporción de imágenes clasificadas correctamente.\n","\n","Un ajuste crucial que implementamos para evitar el sobreajuste, un problema común en el entrenamiento de redes neuronales, fue el uso del callback `EarlyStopping`. Este callback monitorea una métrica específica durante el entrenamiento, en nuestro caso, la `val_accuracy`, es decir, la exactitud en el conjunto de validación. La capacitación se detiene automáticamente si la métrica monitoreada deja de mejorar después de un cierto número de épocas, definido por el parámetro `patience`. Configuramos `patience=3`, lo que significa que si la `val_accuracy` no mejoraba durante 3 épocas consecutivas, el entrenamiento se detenía. Además, con `restore_best_weights=True`, nos aseguramos de que al finalizar el entrenamiento anticipado, el modelo cargara los pesos que habían resultado en el mejor rendimiento en el conjunto de validación, en lugar de los pesos de la última época. Este mecanismo es fundamental para obtener un modelo que generalice bien a datos no vistos.\n","\n"]}]},{"cell_type":"markdown","source":["Explicación adicional: El formato \"one-hot\" (o \"codificación one-hot\") es una forma de representar datos categóricos (datos que pertenecen a un conjunto finito de categorías, como los tipos de vegetales en este caso) de manera numérica para que los algoritmos de aprendizaje automático puedan procesarlos.\n","\n","Imagina que tienes 10 clases de vegetales. En lugar de representar cada clase con un número entero simple (por ejemplo, 0 para \"Bean\", 1 para \"Broccoli\", etc.), lo cual podría implicar una relación de orden que no existe entre las clases, la codificación one-hot crea un vector binario (compuesto solo por 0s y 1s) para cada clase.\n","\n","Este vector tiene una longitud igual al número total de clases. Para una instancia de una clase particular, el vector tendrá un 1 en la posición correspondiente a esa clase y 0s en todas las demás posiciones.\n","\n","Por ejemplo, si tienes 10 clases:\n","\n","\"Bean\" podría representarse como un vector donde el primer elemento es 1 y los demás son 0: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n","\"Broccoli\" podría ser el segundo elemento en 1: [0, 1, 0, 0, 0, 0, 0, 0, 0, 0]\n","Y así sucesivamente para cada clase.\n","En el contexto de tu código, label_mode='categorical' en image_dataset_from_directory se encarga precisamente de convertir las etiquetas de las carpetas (los nombres de las clases de vegetales) a este formato one-hot, que es el formato de salida esperado por la capa final de tu modelo (la capa Dense con activación softmax) cuando estás entrenando un clasificador multi-clase con categorical_crossentropy como función de pérdida.\n","\n","En resumen, la codificación one-hot convierte las etiquetas categóricas en un formato binario denso que facilita el cálculo de la función de pérdida y el entrenamiento del modelo de clasificación"],"metadata":{"id":"1aXXffDtLz2W"}},{"cell_type":"markdown","metadata":{"id":"f326ab2d"},"source":["**Reasoning**:\n","Explain the evaluation of the model's performance using classification reports and confusion matrices on the validation and test datasets.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6341b64b","executionInfo":{"status":"ok","timestamp":1749849741314,"user_tz":180,"elapsed":4,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"c23e3b4b-543d-47a2-d954-6f70c3a9a675"},"source":["evaluation_explanation = \"\"\"\n","Una vez finalizado el entrenamiento, procedimos a evaluar el rendimiento de nuestro modelo. La evaluación se realizó utilizando tanto el conjunto de validación como el conjunto de prueba, lo cual es fundamental para tener una idea clara de cómo el modelo generaliza a datos no vistos.\n","\n","Para esta evaluación, generamos informes de clasificación detallados y matrices de confusión. Los informes de clasificación (`classification_report`) nos proporcionan métricas clave como precisión (precision), exhaustividad (recall) y puntuación F1 (f1-score) para cada clase de vegetal, además de las métricas promedio y la exactitud general. Estas métricas son esenciales para entender el rendimiento del modelo a nivel de clase y en general.\n","\n","Las matrices de confusión (`confusion_matrix`), visualizadas a través de mapas de calor (`sns.heatmap`), nos ofrecen una representación gráfica y numérica de las predicciones del modelo frente a las etiquetas reales. Cada celda de la matriz muestra el número de imágenes de una clase real que fueron clasificadas por el modelo como una clase predicha. La diagonal principal representa las clasificaciones correctas, mientras que los elementos fuera de la diagonal indican errores de clasificación. Analizar la matriz de confusión nos permite identificar qué clases son más difíciles de distinguir para el modelo y dónde ocurren los errores más comunes.\n","\n","Presentamos los resultados de la evaluación para ambos conjuntos: el de validación, que se utilizó durante el entrenamiento para monitorizar el progreso y aplicar EarlyStopping, y el de prueba, que es un conjunto completamente independiente y se utiliza para la evaluación final e imparcial del rendimiento del modelo. Observar las métricas y las matrices de confusión en ambos conjuntos nos da confianza en la capacidad de generalización de nuestro modelo.\n","\"\"\"\n","print(evaluation_explanation)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Una vez finalizado el entrenamiento, procedimos a evaluar el rendimiento de nuestro modelo. La evaluación se realizó utilizando tanto el conjunto de validación como el conjunto de prueba, lo cual es fundamental para tener una idea clara de cómo el modelo generaliza a datos no vistos.\n","\n","Para esta evaluación, generamos informes de clasificación detallados y matrices de confusión. Los informes de clasificación (`classification_report`) nos proporcionan métricas clave como precisión (precision), exhaustividad (recall) y puntuación F1 (f1-score) para cada clase de vegetal, además de las métricas promedio y la exactitud general. Estas métricas son esenciales para entender el rendimiento del modelo a nivel de clase y en general.\n","\n","Las matrices de confusión (`confusion_matrix`), visualizadas a través de mapas de calor (`sns.heatmap`), nos ofrecen una representación gráfica y numérica de las predicciones del modelo frente a las etiquetas reales. Cada celda de la matriz muestra el número de imágenes de una clase real que fueron clasificadas por el modelo como una clase predicha. La diagonal principal representa las clasificaciones correctas, mientras que los elementos fuera de la diagonal indican errores de clasificación. Analizar la matriz de confusión nos permite identificar qué clases son más difíciles de distinguir para el modelo y dónde ocurren los errores más comunes.\n","\n","Presentamos los resultados de la evaluación para ambos conjuntos: el de validación, que se utilizó durante el entrenamiento para monitorizar el progreso y aplicar EarlyStopping, y el de prueba, que es un conjunto completamente independiente y se utiliza para la evaluación final e imparcial del rendimiento del modelo. Observar las métricas y las matrices de confusión en ambos conjuntos nos da confianza en la capacidad de generalización de nuestro modelo.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"49664a0c"},"source":["**Reasoning**:\n","Explain the discussion and conclusion of the project, summarizing the findings and potential future work.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7b566dfe","executionInfo":{"status":"ok","timestamp":1749849741329,"user_tz":180,"elapsed":14,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"d4ba1bad-5f5b-4c36-81e1-bc7dba033d88"},"source":["discussion_conclusion = \"\"\"\n","En resumen, hemos desarrollado y entrenado un modelo CNN para la clasificación de imágenes de vegetales. Los resultados en los conjuntos de validación y prueba, como se evidencian en los informes de clasificación y las matrices de confusión, muestran una alta exactitud general y un buen rendimiento a nivel de clase. La implementación de la capa de `Rescaling` para la normalización de la entrada y el uso estratégico de `EarlyStopping` con restauración de mejores pesos fueron ajustes importantes que contribuyeron a la estabilidad del entrenamiento y a la capacidad de generalización del modelo, ayudando a mitigar el sobreajuste.\n","\n","Aunque los resultados son prometedores, es importante notar que la evaluación en el dataset de \"doublecheck\" mostró una disminución en la exactitud. Esto podría deberse a diferencias en la distribución de los datos, la calidad de las imágenes o la representación de ciertas clases en ese dataset en comparación con los conjuntos de entrenamiento y prueba originales. Esto subraya la importancia de evaluar los modelos en datasets diversos para comprender su robustez en diferentes escenarios del mundo real.\n","\n","Como trabajo futuro, podríamos explorar técnicas de aumento de datos más avanzadas para mejorar la robustez del modelo, experimentar con arquitecturas de CNN más complejas o pre-entrenadas (como transferencia de aprendizaje), y analizar en mayor profundidad las clases donde el modelo presenta mayores dificultades de clasificación, posiblemente recolectando más datos o aplicando técnicas específicas para clases desbalanceadas si fuera el caso.\n","\n","En conclusión, este proyecto demuestra la viabilidad del aprendizaje profundo para la clasificación de imágenes de vegetales, proporcionando una base sólida para futuras investigaciones y aplicaciones en este campo.\n","\"\"\"\n","print(discussion_conclusion)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","En resumen, hemos desarrollado y entrenado un modelo CNN para la clasificación de imágenes de vegetales. Los resultados en los conjuntos de validación y prueba, como se evidencian en los informes de clasificación y las matrices de confusión, muestran una alta exactitud general y un buen rendimiento a nivel de clase. La implementación de la capa de `Rescaling` para la normalización de la entrada y el uso estratégico de `EarlyStopping` con restauración de mejores pesos fueron ajustes importantes que contribuyeron a la estabilidad del entrenamiento y a la capacidad de generalización del modelo, ayudando a mitigar el sobreajuste.\n","\n","Aunque los resultados son prometedores, es importante notar que la evaluación en el dataset de \"doublecheck\" mostró una disminución en la exactitud. Esto podría deberse a diferencias en la distribución de los datos, la calidad de las imágenes o la representación de ciertas clases en ese dataset en comparación con los conjuntos de entrenamiento y prueba originales. Esto subraya la importancia de evaluar los modelos en datasets diversos para comprender su robustez en diferentes escenarios del mundo real.\n","\n","Como trabajo futuro, podríamos explorar técnicas de aumento de datos más avanzadas para mejorar la robustez del modelo, experimentar con arquitecturas de CNN más complejas o pre-entrenadas (como transferencia de aprendizaje), y analizar en mayor profundidad las clases donde el modelo presenta mayores dificultades de clasificación, posiblemente recolectando más datos o aplicando técnicas específicas para clases desbalanceadas si fuera el caso.\n","\n","En conclusión, este proyecto demuestra la viabilidad del aprendizaje profundo para la clasificación de imágenes de vegetales, proporcionando una base sólida para futuras investigaciones y aplicaciones en este campo.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"06bf03ad"},"source":["## Evaluación de resultados (1.5 min)\n","\n","### Subtask:\n","Presentar y discutir las métricas de evaluación obtenidas en los conjuntos de validación y prueba (accuracy, precision, recall, f1-score). Mostrar las matrices de confusión como una visualización de los resultados.\n"]},{"cell_type":"markdown","metadata":{"id":"98b5cf05"},"source":["**Reasoning**:\n","Present and discuss the evaluation metrics and confusion matrices from the validation and test sets, incorporating the provided explanations.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7700b7d6","executionInfo":{"status":"ok","timestamp":1749849741341,"user_tz":180,"elapsed":12,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"066e6970-83c7-4fbe-ea8d-481b0ffe00f0"},"source":["print(evaluation_explanation)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Una vez finalizado el entrenamiento, procedimos a evaluar el rendimiento de nuestro modelo. La evaluación se realizó utilizando tanto el conjunto de validación como el conjunto de prueba, lo cual es fundamental para tener una idea clara de cómo el modelo generaliza a datos no vistos.\n","\n","Para esta evaluación, generamos informes de clasificación detallados y matrices de confusión. Los informes de clasificación (`classification_report`) nos proporcionan métricas clave como precisión (precision), exhaustividad (recall) y puntuación F1 (f1-score) para cada clase de vegetal, además de las métricas promedio y la exactitud general. Estas métricas son esenciales para entender el rendimiento del modelo a nivel de clase y en general.\n","\n","Las matrices de confusión (`confusion_matrix`), visualizadas a través de mapas de calor (`sns.heatmap`), nos ofrecen una representación gráfica y numérica de las predicciones del modelo frente a las etiquetas reales. Cada celda de la matriz muestra el número de imágenes de una clase real que fueron clasificadas por el modelo como una clase predicha. La diagonal principal representa las clasificaciones correctas, mientras que los elementos fuera de la diagonal indican errores de clasificación. Analizar la matriz de confusión nos permite identificar qué clases son más difíciles de distinguir para el modelo y dónde ocurren los errores más comunes.\n","\n","Presentamos los resultados de la evaluación para ambos conjuntos: el de validación, que se utilizó durante el entrenamiento para monitorizar el progreso y aplicar EarlyStopping, y el de prueba, que es un conjunto completamente independiente y se utiliza para la evaluación final e imparcial del rendimiento del modelo. Observar las métricas y las matrices de confusión en ambos conjuntos nos da confianza en la capacidad de generalización de nuestro modelo.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"769cf666"},"source":["**Reasoning**:\n","The variable `evaluation_explanation` was not defined in the current session. I need to redefine it to print the explanation about the evaluation process.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bHFO9fY-nvUv","executionInfo":{"status":"ok","timestamp":1749849741358,"user_tz":180,"elapsed":16,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"e4538f71-ac27-456e-aa6b-24f7e6d26059"},"source":["evaluation_explanation = \"\"\"\n","Una vez finalizado el entrenamiento, procedimos a evaluar el rendimiento de nuestro modelo. La evaluación se realizó utilizando tanto el conjunto de validación como el conjunto de prueba, lo cual es fundamental para tener una idea clara de cómo el modelo generaliza a datos no vistos.\n","\n","Para esta evaluación, generamos informes de clasificación detallados y matrices de confusión. Los informes de clasificación (`classification_report`) nos proporcionan métricas clave como precisión (precision), exhaustividad (recall) y puntuación F1 (f1-score) para cada clase de vegetal, además de las métricas promedio y la exactitud general. Estas métricas son esenciales para entender el rendimiento del modelo a nivel de clase y en general.\n","\n","Las matrices de confusión (`confusion_matrix`), visualizadas a través de mapas de calor (`sns.heatmap`), nos ofrecen una representación gráfica y numérica de las predicciones del modelo frente a las etiquetas reales. Cada celda de la matriz muestra el número de imágenes de una clase real que fueron clasificadas por el modelo como una clase predicha. La diagonal principal representa las clasificaciones correctas, mientras que los elementos fuera de la diagonal indican errores de clasificación. Analizar la matriz de confusión nos permite identificar qué clases son más difíciles de distinguir para el modelo y dónde ocurren los errores más comunes.\n","\n","Presentamos los resultados de la evaluación para ambos conjuntos: el de validación, que se utilizó durante el entrenamiento para monitorizar el progreso y aplicar EarlyStopping, y el de prueba, que es un conjunto completamente independiente y se utiliza para la evaluación final e imparcial del rendimiento del modelo. Observar las métricas y las matrices de confusión en ambos conjuntos nos da confianza en la capacidad de generalización de nuestro modelo.\n","\"\"\"\n","print(evaluation_explanation)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Una vez finalizado el entrenamiento, procedimos a evaluar el rendimiento de nuestro modelo. La evaluación se realizó utilizando tanto el conjunto de validación como el conjunto de prueba, lo cual es fundamental para tener una idea clara de cómo el modelo generaliza a datos no vistos.\n","\n","Para esta evaluación, generamos informes de clasificación detallados y matrices de confusión. Los informes de clasificación (`classification_report`) nos proporcionan métricas clave como precisión (precision), exhaustividad (recall) y puntuación F1 (f1-score) para cada clase de vegetal, además de las métricas promedio y la exactitud general. Estas métricas son esenciales para entender el rendimiento del modelo a nivel de clase y en general.\n","\n","Las matrices de confusión (`confusion_matrix`), visualizadas a través de mapas de calor (`sns.heatmap`), nos ofrecen una representación gráfica y numérica de las predicciones del modelo frente a las etiquetas reales. Cada celda de la matriz muestra el número de imágenes de una clase real que fueron clasificadas por el modelo como una clase predicha. La diagonal principal representa las clasificaciones correctas, mientras que los elementos fuera de la diagonal indican errores de clasificación. Analizar la matriz de confusión nos permite identificar qué clases son más difíciles de distinguir para el modelo y dónde ocurren los errores más comunes.\n","\n","Presentamos los resultados de la evaluación para ambos conjuntos: el de validación, que se utilizó durante el entrenamiento para monitorizar el progreso y aplicar EarlyStopping, y el de prueba, que es un conjunto completamente independiente y se utiliza para la evaluación final e imparcial del rendimiento del modelo. Observar las métricas y las matrices de confusión en ambos conjuntos nos da confianza en la capacidad de generalización de nuestro modelo.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"586d7b15"},"source":["**Reasoning**:\n","The evaluation explanation has been provided. The next step is to discuss the results obtained from the test dataset and the doublecheck dataset, referring to the classification reports and confusion matrices already generated, as per the subtask instructions. I will also provide a brief discussion of the doublecheck dataset's unexpected results.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"547b1255","executionInfo":{"status":"ok","timestamp":1749849741363,"user_tz":180,"elapsed":4,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"92dd3b1a-ef49-453a-d61e-3542c0b8cb4f"},"source":["evaluation_results_discussion = \"\"\"\n","Como pueden observar en las matrices de confusión y los informes de clasificación presentados anteriormente para los conjuntos de validación y prueba, nuestro modelo alcanzó una alta precisión.\n","\n","En el conjunto de validación, obtuvimos una exactitud general del {val_accuracy:.4f}. Las métricas por clase (precisión, exhaustividad y f1-score) también son consistentemente altas, indicando que el modelo clasifica correctamente la gran mayoría de los vegetales en este conjunto. La matriz de confusión del conjunto de validación muestra muy pocos errores fuera de la diagonal principal, confirmando este alto rendimiento.\n","\n","Similarmente, en el conjunto de prueba, que es un indicador más fiable del rendimiento del modelo en datos completamente nuevos, logramos una exactitud general del {test_accuracy:.4f}. Los informes de clasificación y la matriz de confusión para el conjunto de prueba también demuestran un rendimiento robusto y comparable al del conjunto de validación, con altas métricas por clase.\n","\n","Sin embargo, como también hemos evaluado el modelo en un dataset adicional llamado \"doublecheck\", observamos una disminución significativa en la exactitud, obteniendo un {doublecheck_accuracy:.4f}. Este resultado inesperado y la matriz de confusión asociada a este dataset, que muestra errores de clasificación más pronunciados para ciertas clases, sugieren que este conjunto de datos podría tener características diferentes a los conjuntos de entrenamiento, validación y prueba originales. Es posible que haya variaciones en la calidad de la imagen, en el estilo de las fotografías o incluso problemas en la categorización de algunas imágenes dentro del propio dataset \"doublecheck\", como se mencionó previamente. Esto resalta la importancia de evaluar los modelos de aprendizaje profundo en diversos conjuntos de datos para entender su capacidad de generalización en diferentes condiciones.\n","\"\"\".format(val_accuracy=0.9888, test_accuracy=0.9875, doublecheck_accuracy=0.5512)\n","\n","print(evaluation_results_discussion)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Como pueden observar en las matrices de confusión y los informes de clasificación presentados anteriormente para los conjuntos de validación y prueba, nuestro modelo alcanzó una alta precisión.\n","\n","En el conjunto de validación, obtuvimos una exactitud general del 0.9888. Las métricas por clase (precisión, exhaustividad y f1-score) también son consistentemente altas, indicando que el modelo clasifica correctamente la gran mayoría de los vegetales en este conjunto. La matriz de confusión del conjunto de validación muestra muy pocos errores fuera de la diagonal principal, confirmando este alto rendimiento.\n","\n","Similarmente, en el conjunto de prueba, que es un indicador más fiable del rendimiento del modelo en datos completamente nuevos, logramos una exactitud general del 0.9875. Los informes de clasificación y la matriz de confusión para el conjunto de prueba también demuestran un rendimiento robusto y comparable al del conjunto de validación, con altas métricas por clase.\n","\n","Sin embargo, como también hemos evaluado el modelo en un dataset adicional llamado \"doublecheck\", observamos una disminución significativa en la exactitud, obteniendo un 0.5512. Este resultado inesperado y la matriz de confusión asociada a este dataset, que muestra errores de clasificación más pronunciados para ciertas clases, sugieren que este conjunto de datos podría tener características diferentes a los conjuntos de entrenamiento, validación y prueba originales. Es posible que haya variaciones en la calidad de la imagen, en el estilo de las fotografías o incluso problemas en la categorización de algunas imágenes dentro del propio dataset \"doublecheck\", como se mencionó previamente. Esto resalta la importancia de evaluar los modelos de aprendizaje profundo en diversos conjuntos de datos para entender su capacidad de generalización en diferentes condiciones.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"9e6bb48c"},"source":["## Discusión y conclusiones (1 min)\n","\n","### Subtask:\n","Interpretar los resultados, destacando el rendimiento del modelo. Mencionar posibles limitaciones o áreas de mejora. Ofrecer una conclusión general sobre el proyecto.\n"]},{"cell_type":"markdown","metadata":{"id":"9ba1d0aa"},"source":["**Reasoning**:\n","Define and print the discussion and conclusion section of the presentation script, interpreting the results from the validation, test, and doublecheck datasets and discussing limitations and future work.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"33bd2269","executionInfo":{"status":"ok","timestamp":1749849741381,"user_tz":180,"elapsed":18,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"5ce79fa7-4646-4304-f0ea-ad62bce14686"},"source":["discussion_conclusion = \"\"\"\n","En resumen, hemos desarrollado y entrenado un modelo CNN para la clasificación de imágenes de vegetales. Los resultados en los conjuntos de validación y prueba, como se evidencian en los informes de clasificación y las matrices de confusión, muestran una alta exactitud general y un buen rendimiento a nivel de clase. La implementación de la capa de `Rescaling` para la normalización de la entrada y el uso estratégico de `EarlyStopping` con restauración de mejores pesos fueron ajustes importantes que contribuyeron a la estabilidad del entrenamiento y a la capacidad de generalización del modelo, ayudando a mitigar el sobreajuste.\n","\n","Observamos que el modelo alcanzó una exactitud general del {val_accuracy:.4f} en el conjunto de validación y del {test_accuracy:.4f} en el conjunto de prueba. Las métricas por clase, como precisión, exhaustividad y f1-score, también fueron consistentemente altas en estos conjuntos, lo que indica que el modelo es efectivo para clasificar la mayoría de las clases de vegetales.\n","\n","Sin embargo, al evaluar el modelo en el dataset de \"doublecheck\", que es un conjunto de datos externo, observamos una disminución significativa en la exactitud, obteniendo un {doublecheck_accuracy:.4f}. Esta caída en el rendimiento puede atribuirse a posibles diferencias en la distribución de los datos, la calidad de las imágenes, o la curación de las etiquetas en este dataset en comparación con los datos originales de entrenamiento y prueba. Esto subraya la importancia de evaluar los modelos en diversos conjuntos de datos para comprender su robustez en diferentes condiciones del mundo real y la sensibilidad a variaciones en los datos de entrada.\n","\n","Como trabajo futuro, podríamos explorar técnicas de aumento de datos más avanzadas para mejorar la robustez del modelo ante variaciones en las imágenes. También sería beneficioso experimentar con arquitecturas de CNN más complejas o aprovechar modelos pre-entrenados mediante transferencia de aprendizaje para potencialmente mejorar el rendimiento. Un análisis más profundo de las clases donde el modelo mostró mayores errores en el dataset \"doublecheck\" podría revelar problemas específicos que requieran una atención particular, como la recolección de datos adicionales o el uso de técnicas para manejar posibles desbalances de clases.\n","\n","En conclusión, este proyecto ha demostrado la capacidad del aprendizaje profundo para abordar la clasificación de imágenes de vegetales con alta precisión en datasets controlados. Si bien el rendimiento en un dataset externo resalta la necesidad de considerar la variabilidad de los datos del mundo real, el modelo desarrollado proporciona una base sólida para futuras mejoras y aplicaciones en este campo.\n","\"\"\".format(val_accuracy=0.9888, test_accuracy=0.9875, doublecheck_accuracy=0.5512)\n","\n","print(discussion_conclusion)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","En resumen, hemos desarrollado y entrenado un modelo CNN para la clasificación de imágenes de vegetales. Los resultados en los conjuntos de validación y prueba, como se evidencian en los informes de clasificación y las matrices de confusión, muestran una alta exactitud general y un buen rendimiento a nivel de clase. La implementación de la capa de `Rescaling` para la normalización de la entrada y el uso estratégico de `EarlyStopping` con restauración de mejores pesos fueron ajustes importantes que contribuyeron a la estabilidad del entrenamiento y a la capacidad de generalización del modelo, ayudando a mitigar el sobreajuste.\n","\n","Observamos que el modelo alcanzó una exactitud general del 0.9888 en el conjunto de validación y del 0.9875 en el conjunto de prueba. Las métricas por clase, como precisión, exhaustividad y f1-score, también fueron consistentemente altas en estos conjuntos, lo que indica que el modelo es efectivo para clasificar la mayoría de las clases de vegetales.\n","\n","Sin embargo, al evaluar el modelo en el dataset de \"doublecheck\", que es un conjunto de datos externo, observamos una disminución significativa en la exactitud, obteniendo un 0.5512. Esta caída en el rendimiento puede atribuirse a posibles diferencias en la distribución de los datos, la calidad de las imágenes, o la curación de las etiquetas en este dataset en comparación con los datos originales de entrenamiento y prueba. Esto subraya la importancia de evaluar los modelos en diversos conjuntos de datos para comprender su robustez en diferentes condiciones del mundo real y la sensibilidad a variaciones en los datos de entrada.\n","\n","Como trabajo futuro, podríamos explorar técnicas de aumento de datos más avanzadas para mejorar la robustez del modelo ante variaciones en las imágenes. También sería beneficioso experimentar con arquitecturas de CNN más complejas o aprovechar modelos pre-entrenados mediante transferencia de aprendizaje para potencialmente mejorar el rendimiento. Un análisis más profundo de las clases donde el modelo mostró mayores errores en el dataset \"doublecheck\" podría revelar problemas específicos que requieran una atención particular, como la recolección de datos adicionales o el uso de técnicas para manejar posibles desbalances de clases.\n","\n","En conclusión, este proyecto ha demostrado la capacidad del aprendizaje profundo para abordar la clasificación de imágenes de vegetales con alta precisión en datasets controlados. Si bien el rendimiento en un dataset externo resalta la necesidad de considerar la variabilidad de los datos del mundo real, el modelo desarrollado proporciona una base sólida para futuras mejoras y aplicaciones en este campo.\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"80bb2438"},"source":["## Summary:\n","\n","### Data Analysis Key Findings\n","\n","*   The project successfully developed and trained a CNN model for classifying vegetable images using the \"vegetables-dataset\" from Kaggle.\n","*   Data preprocessing involved resizing images to 150x150 pixels, batching into groups of 32, and using one-hot encoding for labels via `image_dataset_from_directory`. Normalization was performed using a `Rescaling` layer mapping pixel values from [0, 255] to [-1, 1].\n","*   The CNN architecture included `Conv2D` layers with increasing filters, `MaxPooling2D` for downsampling, `Dropout` for regularization, a `Flatten` layer, and `Dense` layers for classification with a final `softmax` activation.\n","*   Model training used `categorical_crossentropy` as the loss function, the `Adam` optimizer, and `accuracy` as the evaluation metric.\n","*   `EarlyStopping` was employed with a patience of 3 epochs on validation accuracy (`val_accuracy`) to prevent overfitting, and `restore_best_weights=True` ensured the model used the weights from the epoch with the best validation performance.\n","*   The model achieved high accuracy on the validation set (0.9888) and the test set (0.9875), demonstrating strong performance on the original dataset splits.\n","*   Evaluation on an external \"doublecheck\" dataset showed a significantly lower accuracy (0.5512), indicating potential issues with data distribution, quality, or labeling in that specific dataset.\n","\n","### Insights or Next Steps\n","\n","*   The significant performance drop on the \"doublecheck\" dataset highlights the need to evaluate the model's robustness on diverse, real-world data distributions and potentially incorporate domain adaptation techniques or more varied data augmentation during training.\n","*   Future work could explore using advanced data augmentation techniques, transfer learning with pre-trained models, or class-specific analysis and handling (e.g., addressing data imbalance if present) to improve generalization and performance on external or more challenging datasets.\n"]},{"cell_type":"code","source":["# prompt: Por favor agregá un párrafo que explique por qué nuestra prueba de usar una red convolucional densa (modeloDenso = Sequential([\n","#   Input(shape=(150,150,3)),  # Imagen de 150x150 y 3 (r,g,b)\n","#   Flatten(),\n","#   Dense(150, activation='relu'),\n","#   Dense(150, activation='relu'),\n","#   Dense(num_class, activation='softmax')\n","# ], name='modeloDenso')) dio un resultado completamente inútil:    0     0.0000    0.0000    0.0000       120\n","#            1     0.0000    0.0000    0.0000       120\n","#            2     0.0000    0.0000    0.0000       120\n","#            3     0.0000    0.0000    0.0000       120\n","#            4     0.0000    0.0000    0.0000       120\n","#            5     0.1001    1.0000    0.1820       120\n","#            6     0.0000    0.0000    0.0000       120\n","#            7     0.0000    0.0000    0.0000       120\n","#            8     1.0000    0.0083    0.0165       120\n","#            9     0.0000    0.0000    0.0000       120\n","#     accuracy                         0.1008      1200\n","#    macro avg     0.1100    0.1008    0.0198      1200\n","# weighted avg     0.1100    0.1008    0.0198      1200\n","\n","Además del modelo convolucional más complejo que mostró un buen rendimiento, realizamos una prueba inicial con un modelo densamente conectado simple (`modeloDenso`). Esta arquitectura, definida como `Sequential([Input(shape=(150,150,3)), Flatten(), Dense(150, activation='relu'), Dense(150, activation='relu'), Dense(num_class, activation='softmax')])`, aplanaba directamente la imagen de 150x150x3 píxeles en un vector largo antes de pasarlo por dos capas densas. Como muestran los resultados de clasificación para este modelo, obtuvo un rendimiento extremadamente bajo, con una exactitud general de apenas 0.1008 y métricas (precisión, exhaustividad, F1) cercanas a cero para la mayoría de las clases. Esto se debe a que las capas densas, al operar sobre el vector aplanado de píxeles, pierden completamente la información espacial y la estructura local de la imagen (como la relación entre píxeles vecinos que forman bordes o texturas). Para tareas de clasificación de imágenes, es crucial utilizar capas convolucionales (`Conv2D`) y de pooling (`MaxPooling2D`), como hicimos en nuestro modelo final, ya que estas capas están diseñadas específicamente para detectar y aprender patrones visuales jerárquicos que son invariantes a pequeñas traslaciones y distorsiones, algo fundamental para reconocer objetos como vegetales. El modelo denso simple no pudo extraer estas características relevantes y, por lo tanto, produjo clasificaciones inútiles.\"\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"9un3Vk_NMpSz","executionInfo":{"status":"error","timestamp":1749850220530,"user_tz":180,"elapsed":10,"user":{"displayName":"Victoria Ruiz Schulze","userId":"08605801497315076777"}},"outputId":"ad5f0c2e-e9c1-4cda-facb-c3055e61b50a"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid decimal literal (<ipython-input-30-790477845>, line 21)","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-30-790477845>\"\u001b[0;36m, line \u001b[0;32m21\u001b[0m\n\u001b[0;31m    Además del modelo convolucional más complejo que mostró un buen rendimiento, realizamos una prueba inicial con un modelo densamente conectado simple (`modeloDenso`). Esta arquitectura, definida como `Sequential([Input(shape=(150,150,3)), Flatten(), Dense(150, activation='relu'), Dense(150, activation='relu'), Dense(num_class, activation='softmax')])`, aplanaba directamente la imagen de 150x150x3 píxeles en un vector largo antes de pasarlo por dos capas densas. Como muestran los resultados de clasificación para este modelo, obtuvo un rendimiento extremadamente bajo, con una exactitud general de apenas 0.1008 y métricas (precisión, exhaustividad, F1) cercanas a cero para la mayoría de las clases. Esto se debe a que las capas densas, al operar sobre el vector aplanado de píxeles, pierden completamente la información espacial y la estructura local de la imagen (como la relación entre píxeles vecinos que forman bordes o texturas). Para tareas de clasificación de imágenes, es crucial utilizar capas convolucionales (`Conv2D`) y de pooling (`MaxPooling2D`), como hicimos en nuestro modelo final, ya que estas capas están diseñadas específicamente para detectar y aprender patrones visuales jerárquicos que son invariantes a pequeñas traslaciones y distorsiones, algo fundamental para reconocer objetos como vegetales. El modelo denso simple no pudo extraer estas características relevantes y, por lo tanto, produjo clasificaciones inútiles.\u001b[0m\n\u001b[0m                                                                                                                                                                                                                                                                                                                                                                                                           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid decimal literal\n"]}]}]}